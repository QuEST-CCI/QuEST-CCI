# The purpose of this script is to read in OS_STRENGTH file
#   generated by perl gaus09_tr... script

# SYNTAX: python3 Gen_spectra_gaus16.py

import numpy as np
import subprocess as sp
from matplotlib import pyplot as plt


# For plotting
Npts = 1000
sig = 0.01 # eV
Emin = 1   # eV
Emax = 10   # eV

###########################################################
# Make "OS_STRENGTH" file
sp.call(" perl ~/Gaussain_scripts/Excited_States/gaus09_tr_os.pl geometry.out 50", shell=True)
sp.call(" rm Etr* test", shell=True) # Remove dumb files

dE = (Emax - Emin) / Npts

file01 = open('OS_STRENGTH','r')
Exc = []
for count, line in enumerate(file01):
  s = line.split()
  if (s[0] == 'state'):
      break
  Exc.append([float(s[2]),float(s[3])])
file01.close()

file02 = open('Spec__sig_' + str(sig) + '__NStates_' + str(len(Exc)) + '.dat','w')
file03 = open('DOS__sig_' + str(sig) + '__NStates_' + str(len(Exc)) + '.dat','w')
Exc = np.array(Exc)
for i in range(Npts):
  x = Emin + i*dE
  spec = 0
  spec = np.sum( Exc[:,0] * np.exp(-(x-Exc[:,1])**2/sig**2) )
  dos = np.sum( np.exp(-(x-Exc[:,1])**2/sig**2) )
  file02.write(str(x) + '\t' + str(spec) + '\n')
  file03.write(str(x) + '\t' + str(dos) + '\n')
file02.close()
file03.close()

file04 = open('Energy_Osc.dat','w')
for i in range(len(Exc)):
  file04.write(str(Exc[i][1]) + '\t' + str(Exc[i][0]) + '\n')
file04.close()

# Plot results
dE = (Emax - Emin) / Npts
spec = np.zeros(( Npts ))
dos = np.zeros(( Npts ))
for j in range( Npts ):
  x = Emin + j * dE
  spec[j] += np.sum( Exc[:,0] * np.exp( -( x - Exc[:,1] ) ** 2 / 2/ sig ) )
  dos[j]  += np.sum(            np.exp( -( x - Exc[:,1] ) ** 2 / 2/ sig ) ) 

# Plot in eV
plt.plot( np.linspace(Emin, Emax, Npts), spec, c='blue', label="Abs." )
plt.plot( np.linspace(Emin, Emax, Npts), dos / np.max(dos) * np.max(spec), c='blue',alpha=0.25, linewidth=6, label="DOS" )
plt.scatter( Exc[:,1], Exc[:,0], c='blue' )
plt.title('Absorption', fontsize=15)
plt.xlabel('Energy (eV)', fontsize=15)
plt.ylabel('Absorption (Osc. Str.)', fontsize=15)
plt.xlim(Emin,Emax)
plt.ylim(0)
plt.legend()
plt.tight_layout()
plt.savefig(f"SPEC_sig{sig}_eV.jpg")
plt.clf()


# Plot in nm
# lambda = 1239.8 / E
plt.plot( 1239.8 / np.linspace(Emin+0.001, Emax, Npts), spec, c='blue', label="Abs." )
plt.plot( 1239.8 / np.linspace(Emin+0.001, Emax, Npts), dos / np.max(dos) * np.max(spec), c='blue',alpha=0.25, linewidth=6, label="DOS" )
plt.scatter( Exc[:,1], Exc[:,0], c='blue' )
plt.title('Absorption', fontsize=15)
plt.xlabel('Wavelength (nm)', fontsize=15)
plt.ylabel('Absorption (Osc. Str.)', fontsize=15)
plt.xlim(1239.8/Emax,1239.8/Emin)
plt.ylim(0)
plt.legend()
plt.tight_layout()
plt.savefig(f"SPEC_sig{sig}_nm.jpg")
plt.clf()













